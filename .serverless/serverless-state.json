{
  "service": {
    "service": "working-days-layered",
    "serviceObject": {
      "name": "working-days-layered"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "us-west-2",
      "memorySize": 256,
      "timeout": 30,
      "httpApi": {
        "cors": true,
        "disableDefaultEndpoint": true
      },
      "apiGateway": {
        "shouldStartNameWithService": true,
        "minimumCompressionSize": 0,
        "usagePlan": {
          "quota": {
            "limit": 5000,
            "offset": 0,
            "period": "MONTH"
          },
          "throttle": {
            "burstLimit": 200,
            "rateLimit": 100
          }
        }
      },
      "environment": {
        "NODE_ENV": "dev",
        "STAGE": "dev"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "BusinessHoursLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/working-days-layered-dev-businessHours"
            }
          },
          "SwaggerRedirectURILogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/working-days-layered-dev-swagger-redirect-uri"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "working-days-layered",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/working-days-layered-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/working-days-layered-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Deny",
                        "Action": "logs:PutLogEvents",
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/working-days-layered-dev-swagger-ui:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/working-days-layered-dev-swagger-json:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "working-days-layered",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-85d78073-ebe5-4728-afdb-2f6a9efb2c0c"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "BusinessHoursLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "SwaggerRedirectURILogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "BusinessHoursLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z/working-days-layered.zip"
              },
              "Handler": "s_businessHours.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "working-days-layered-dev-businessHours",
              "MemorySize": 256,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "dev",
                  "STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "BusinessHoursLogGroup"
            ]
          },
          "SwaggerUILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z/working-days-layered.zip"
              },
              "Handler": "s_swaggerUI.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "working-days-layered-dev-swagger-ui",
              "MemorySize": 256,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "dev",
                  "STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            }
          },
          "SwaggerJSONLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z/working-days-layered.zip"
              },
              "Handler": "s_swaggerJSON.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "working-days-layered-dev-swagger-json",
              "MemorySize": 256,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "dev",
                  "STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            }
          },
          "SwaggerRedirectURILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z/working-days-layered.zip"
              },
              "Handler": "s_swaggerRedirectURI.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "working-days-layered-dev-swagger-redirect-uri",
              "MemorySize": 256,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "dev",
                  "STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SwaggerRedirectURILogGroup"
            ]
          },
          "BusinessHoursLambdaVersion1ncT8THgZMy8Kp5n2IXRxlCJM769SEMmKFQpt4fbBU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BusinessHoursLambdaFunction"
              },
              "CodeSha256": "R7S5RdejNe8LkkX+BP9ZLxOMeDevxILSMOOCG04Ts/A="
            }
          },
          "SwaggerUILambdaVersionfbfSNxIimAlorrR9ilOqakFQkjV2gKwtueVAyxlpF8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerUILambdaFunction"
              },
              "CodeSha256": "R7S5RdejNe8LkkX+BP9ZLxOMeDevxILSMOOCG04Ts/A="
            }
          },
          "SwaggerJSONLambdaVersioni10rQFEwbd141VTRDeqopk98kIbWrW3XAwI788UFcg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerJSONLambdaFunction"
              },
              "CodeSha256": "R7S5RdejNe8LkkX+BP9ZLxOMeDevxILSMOOCG04Ts/A="
            }
          },
          "SwaggerRedirectURILambdaVersion0viZM3j7PmjpCbvS6X99PcShQsaxJGDTo8KYbktBM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerRedirectURILambdaFunction"
              },
              "CodeSha256": "R7S5RdejNe8LkkX+BP9ZLxOMeDevxILSMOOCG04Ts/A="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "working-days-layered-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 0
            }
          },
          "ApiGatewayResourceBusinessDashhours": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "business-hours",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSwagger": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "swagger",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSwaggerjson": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "swagger.json",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOauth2Dashredirecthtml": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "oauth2-redirect.html",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBusinessDashhoursOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBusinessDashhours"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBusinessDashhoursGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.dayToAdd": true,
                "method.request.querystring.hourToAdd": true,
                "method.request.querystring.startDate": false
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBusinessDashhours"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BusinessHoursLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayWorkingdayslayeredRequestValidator"
              }
            },
            "DependsOn": [
              "BusinessHoursLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSwaggerGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSwagger"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SwaggerUILambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SwaggerUILambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSwaggerjsonGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSwaggerjson"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SwaggerJSONLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SwaggerJSONLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodOauth2DashredirecthtmlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOauth2Dashredirecthtml"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SwaggerRedirectURILambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SwaggerRedirectURILambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayWorkingdayslayeredRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "working-days-layered-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1758056795489": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodBusinessDashhoursOptions",
              "ApiGatewayMethodBusinessDashhoursGet",
              "ApiGatewayMethodSwaggerGet",
              "ApiGatewayMethodSwaggerjsonGet",
              "ApiGatewayMethodOauth2DashredirecthtmlGet"
            ]
          },
          "ApiGatewayUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": "ApiGatewayDeployment1758056795489",
            "Properties": {
              "ApiStages": [
                {
                  "ApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "Stage": "dev"
                }
              ],
              "Description": "Usage plan for working-days-layered dev stage",
              "UsagePlanName": "working-days-layered-dev",
              "Quota": {
                "Limit": 5000,
                "Offset": 0,
                "Period": "MONTH"
              },
              "Throttle": {
                "BurstLimit": 200,
                "RateLimit": 100
              }
            }
          },
          "BusinessHoursLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BusinessHoursLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SwaggerUILambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SwaggerUILambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SwaggerJSONLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SwaggerJSONLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SwaggerRedirectURILambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SwaggerRedirectURILambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/working-days-layered-dev"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "working-days-layered",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z/custom-resources.zip"
              },
              "FunctionName": "working-days-layered-dev-custom-resource-apigw-cw-role",
              "Handler": "api-gateway-cloud-watch-role/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs18.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-ServerlessDeploymentBucketName"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-EnterpriseLogAccessIamRole"
            }
          },
          "BusinessHoursLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BusinessHoursLambdaVersion1ncT8THgZMy8Kp5n2IXRxlCJM769SEMmKFQpt4fbBU"
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-BusinessHoursLambdaFunctionQualifiedArn"
            }
          },
          "SwaggerUILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerUILambdaVersionfbfSNxIimAlorrR9ilOqakFQkjV2gKwtueVAyxlpF8"
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-SwaggerUILambdaFunctionQualifiedArn"
            }
          },
          "SwaggerJSONLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerJSONLambdaVersioni10rQFEwbd141VTRDeqopk98kIbWrW3XAwI788UFcg"
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-SwaggerJSONLambdaFunctionQualifiedArn"
            }
          },
          "SwaggerRedirectURILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerRedirectURILambdaVersion0viZM3j7PmjpCbvS6X99PcShQsaxJGDTo8KYbktBM"
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-SwaggerRedirectURILambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-working-days-layered-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "logs": {
        "restApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourceId\":\"$context.resourceId\",\"resourcePath\":\"$context.resourcePath\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"status\":\"$context.status\",\"authLatency\":\"$context.authorizer.integrationLatency\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationStatus\":\"$context.integrationStatus\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_ACCESS_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverlessOffline": {
        "noPrependStageInUrl": true,
        "httpPort": 3000,
        "ignoreJWTSignature": true,
        "reloadHandler": true
      },
      "esbuild": {
        "bundle": true,
        "minify": false,
        "sourcemap": true,
        "exclude": [
          "aws-sdk"
        ],
        "target": "node20",
        "define": {},
        "platform": "node",
        "concurrency": 10,
        "watch": {
          "pattern": [
            "src/**/*.ts"
          ],
          "ignore": [
            "dist",
            ".esbuild",
            "node_modules"
          ]
        }
      },
      "autoswagger": {
        "title": "Working Days API",
        "apiType": "http",
        "generateSwaggerOnDeploy": true,
        "swaggerPath": "swagger",
        "typefiles": [
          "./src/types/api-types.d.ts"
        ],
        "useStage": false,
        "basePath": "/",
        "host": "localhost:3000/dev",
        "schemes": [
          "http"
        ],
        "excludeStages": [
          "production"
        ],
        "useRedirectUI": true
      }
    },
    "plugins": [
      "serverless-auto-swagger",
      "serverless-esbuild",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "businessHours": {
        "handler": "s_businessHours.handler",
        "events": [
          {
            "http": {
              "path": "business-hours",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "summary": "Obtiene horarios comerciales",
              "description": "Retorna los horarios comerciales basados en parámetros de consulta",
              "swaggerTags": [
                "Business Hours"
              ],
              "queryStringParameters": {
                "dayToAdd": {
                  "required": true,
                  "type": "string",
                  "description": "Día a agregar para el cálculo"
                },
                "hourToAdd": {
                  "required": true,
                  "type": "string",
                  "description": "Hora a agregar para el cálculo"
                },
                "startDate": {
                  "required": false,
                  "type": "string",
                  "description": "Fecha de inicio para el cálculo"
                }
              },
              "responseData": {
                "200": {
                  "description": "Horarios comerciales obtenidos exitosamente",
                  "bodyType": "BusinessHoursResponse"
                },
                "400": {
                  "description": "Parámetros de consulta inválidos",
                  "bodyType": "ErrorResponse"
                },
                "500": {
                  "description": "Error interno del servidor",
                  "bodyType": "ErrorResponse"
                }
              },
              "request": {
                "parameters": {
                  "method.request.querystring.dayToAdd": true,
                  "method.request.querystring.hourToAdd": true,
                  "method.request.querystring.startDate": false
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "working-days-layered-dev-businessHours",
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "BusinessHoursLambdaVersion1ncT8THgZMy8Kp5n2IXRxlCJM769SEMmKFQpt4fbBU"
      },
      "swaggerUI": {
        "name": "working-days-layered-dev-swagger-ui",
        "handler": "s_swaggerUI.handler",
        "disableLogs": true,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "swagger",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "SwaggerUILambdaVersionfbfSNxIimAlorrR9ilOqakFQkjV2gKwtueVAyxlpF8"
      },
      "swaggerJSON": {
        "name": "working-days-layered-dev-swagger-json",
        "handler": "s_swaggerJSON.handler",
        "disableLogs": true,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "swagger.json",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "SwaggerJSONLambdaVersioni10rQFEwbd141VTRDeqopk98kIbWrW3XAwI788UFcg"
      },
      "swaggerRedirectURI": {
        "name": "working-days-layered-dev-swagger-redirect-uri",
        "handler": "s_swaggerRedirectURI.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "oauth2-redirect.html",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "SwaggerRedirectURILambdaVersion0viZM3j7PmjpCbvS6X99PcShQsaxJGDTo8KYbktBM"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "org": "angelkashed12",
      "app": "working-days-layered",
      "service": "working-days-layered",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "patterns": [
          "!node_modules/.git/**",
          "!node_modules/.bin/**",
          "!node_modules/aws-sdk/**",
          "!src/**",
          "!tsconfig.json",
          "!.eslintrc.cjs",
          "!.gitignore",
          "!**/*",
          "dist/**",
          "node_modules/**"
        ],
        "artifactsS3KeyDirname": "serverless/working-days-layered/dev/code-artifacts"
      },
      "functions": {
        "businessHours": {
          "$ref": "$[\"service\"][\"functions\"][\"businessHours\"]"
        }
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "app": "working-days-layered",
    "org": "angelkashed12",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "orgUid": "85d78073-ebe5-4728-afdb-2f6a9efb2c0c",
    "appUid": "rpJBCjWscVSBX1sjLM"
  },
  "package": {
    "artifactDirectoryName": "serverless/working-days-layered/dev/1758057189289-2025-09-16T21:13:09.289Z",
    "artifact": "working-days-layered.zip"
  }
}